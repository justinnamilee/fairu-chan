#!/usr/bin/perl


use strict;
use lib q[lib]; # for linter


use fairu::config q[meta];
use fairu::chan; # owo


# perl "constants" the old school way
sub IDX_MODE() { 1 }
sub IDX_FILE() { 0 }
sub DEF_IDLE() { 600 }
sub DEF_WAIT() { 5 }


# global stuff
my $action = 0;
my $file   = $ARGV[IDX_FILE];
my $run    = 0;
my $idle   = 0;
my $reload = 0;
my $watch  = undef;

# setup autoflush
our $| = 1;

# signal handlers
$SIG{TERM} = sub { $run = 0 };
$SIG{USR1} = sub { $idle = 0 };
$SIG{USR2} = sub { $reload = 1 };

# set the run mode
$action = 1, $run = 0 if (lc($ARGV[IDX_MODE]) eq q[run]);
$action = 1, $run = 1 if (lc($ARGV[IDX_MODE]) eq q[daemon]);

# config some stuff
exit 1 unless (fairu::config::parse($file) == 0);
$idle = (meta->{idleTime} || DEF_IDLE) if ($run == 1);

if ($run && meta->{autoreload})
{
  require File::Monitor;
  $watch = File::Monitor->new();
  $watch->watch($file, sub { $reload = 1, $idle = 0 });
}

# first run
fairu::chan::uwu($action);

# go daemon if requested
while ($run)
{
  $watch->scan if defined($watch);

  sleep(meta->{waitTime} || DEF_WAIT);
  $idle -= meta->{waitTime} || DEF_WAIT;

  if ($run && $reload)
  {
    $reload = 0;
    fairu::config::parse($file);
  }

  if ($run && $idle <= 0)
  {
    $idle = meta->{idleTime} || DEF_IDLE;

    fairu::chan::uwu($action);
  }
}

# bye felicia~
exit 0;
